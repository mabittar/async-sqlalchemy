services:
  db:
    image: postgres:16
    container_name: db
    restart: always
    ports:
      - "5432:5432"
    networks:
      - app_network
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}

  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    networks:
      - app_network
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}

  # app:
  #   container_name: app
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./
  #   restart: always
  #   networks:
  #     - app_network
  #   ports:
  #     - "8000:8000"
  #   env_file:
  #     - .env
  #   depends_on:
  #     - db
  #   environment:
  #     - APP_ENV=${APP_ENV?Variable not set}
  #     - APP_VERSION=${APP_VERSION?Variable not set}
  #     - ASGI_LOGGER=${ASGI_LOGGER?Variable not set}
  #     - DOCS_URL=${DOCS_URL?Variable not set}
  #     - OPENAPI_URL=${OPENAPI_URL?Variable not set}
  #     - REDOC_URL=${REDOC_URL?Variable not set}
  #     - SERVER_HOST=${SERVER_HOST?Variable not set}
  #     - SERVER_PORT=${SERVER_PORT?Variable not set}
  #     - SERVER_WORKERS=${SERVER_WORKERS?Variable not set}
  #     - POSTGRES_SERVER=${POSTGRES_SERVER?Variable not set}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
  #     - POSTGRES_USER=${POSTGRES_USER?Variable not set}
  #     - POSTGRES_DB=${POSTGRES_DB?Variable not set}
  #     - POSTGRES_PORT=${POSTGRES_PORT?Variable not set}

networks:
  app_network: